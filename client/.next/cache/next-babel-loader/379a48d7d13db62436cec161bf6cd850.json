{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Agni\\\\Udemy\\\\MERNStack_AWS\\\\SourceCode\\\\frontend\\\\pages\\\\auth\\\\registration\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../../../components/Layout';\nimport { showSuccessMessage, showErrorMessage } from '../../../utils/alert';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API } from '../../../config';\nimport { isAuth } from '../../../utils/auth';\nimport Router from 'next/router';\nimport { listAPI } from '../../../listAPI';\nimport { listPage } from '../../../listPage';\nimport { Page_RegistrationDone } from '../../../listPage';\nimport { Page_User, Page_Admin } from '../../../listPage';\n\nconst Registration = () => {\n  //if user has login, can't display registration screen and will be redirected to home\n  useEffect(() => {\n    isAuth() && Router.push(listPage.Page_User);\n  }, []);\n  const buttonState = ['Submit', 'Registering..', 'Submitted'];\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: '',\n    buttonText: buttonState[0]\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = state;\n\n  const registrationHead = () => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Register\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const handleChange = attributeName => e => {\n    setState(_objectSpread({}, state, {\n      [attributeName]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: buttonState[0]\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread({}, state, {\n      buttonText: buttonState[1]\n    }));\n\n    try {\n      //console.table({name, email, password})\n      const response = await axios.post(`${API}${listAPI.API_Register}`, {\n        name,\n        email,\n        password\n      }); //if success , empty all field\n\n      setState(_objectSpread({}, state, {\n        name: '',\n        email: '',\n        password: '',\n        buttonText: buttonState[2],\n        success: response.data.message,\n        error: response.data.error\n      }));\n      Router.push(listPage.Page_RegistrationDone);\n    } catch (error) {\n      console.log('error: ', error);\n      setState(_objectSpread({}, state, {\n        buttonText: buttonState[0],\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const registrationForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \" \", state.buttonText, \" \")));\n  };\n\n  const registrationMessage = () => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, success && showSuccessMessage(success), error && showErrorMessage(error));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, registrationHead(), registrationMessage(), registrationForm(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Registration;","map":{"version":3,"sources":["C:/Agni/Udemy/MERNStack_AWS/SourceCode/frontend/pages/auth/registration/index.js"],"names":["Layout","showSuccessMessage","showErrorMessage","useEffect","useState","axios","API","isAuth","Router","listAPI","listPage","Page_RegistrationDone","Page_User","Page_Admin","Registration","push","buttonState","state","setState","name","email","password","error","success","buttonText","registrationHead","handleChange","attributeName","e","target","value","handleSubmit","preventDefault","response","post","API_Register","data","message","console","log","registrationForm","registrationMessage"],"mappings":"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","sourcesContent":["import Layout from '../../../components/Layout';\r\nimport {showSuccessMessage, showErrorMessage} from '../../../utils/alert';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {API} from '../../../config';\r\nimport {isAuth} from '../../../utils/auth';\r\nimport Router from 'next/router'\r\n\r\nimport { listAPI } from '../../../listAPI';\r\nimport { listPage } from '../../../listPage';\r\n\r\nimport {Page_RegistrationDone} from '../../../listPage'\r\nimport {Page_User, Page_Admin} from '../../../listPage'\r\n\r\nconst Registration = () =>  {\r\n   \r\n    //if user has login, can't display registration screen and will be redirected to home\r\n    useEffect(() => {\r\n        isAuth() && Router.push(listPage.Page_User)\r\n    },[]);\r\n   \r\n\r\n    const buttonState = ['Submit', 'Registering..', 'Submitted'];\r\n\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error:'',\r\n        success:'',\r\n        buttonText: buttonState[0]\r\n    })\r\n\r\n    const {name, email, password , error, success, buttonText} = state\r\n  \r\n\r\n    const registrationHead = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Register</h1>\r\n                <br />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const handleChange = (attributeName) => (e) => {\r\n        setState({...state, [attributeName]: e.target.value, error:'', success:'', buttonText:buttonState[0]})\r\n    }\r\n\r\n    const handleSubmit =  async e => {\r\n        e.preventDefault();\r\n\r\n        setState({...state, buttonText: buttonState[1] })\r\n        try {\r\n\r\n            //console.table({name, email, password})\r\n \r\n             const response = await axios.post(`${API}${listAPI.API_Register}`,{\r\n                name, email, password\r\n            })\r\n \r\n             //if success , empty all field\r\n             setState({...state,\r\n                name:'',\r\n                email:'',\r\n                password:'',\r\n                buttonText: buttonState[2],\r\n                success: response.data.message,\r\n                error: response.data.error,\r\n            });\r\n\r\n            Router.push(listPage.Page_RegistrationDone) ;\r\n \r\n        }catch(error) {\r\n            console.log('error: ' , error);\r\n            setState({...state,\r\n                buttonText:  buttonState[0],\r\n                error: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n \r\n    const registrationForm = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={name}\r\n                        onChange={handleChange('name')} \r\n                        type=\"text\" className=\"form-control\" placeholder=\"Type your name\"\r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.email}\r\n                        onChange={handleChange('email')} \r\n                        type=\"email\" className=\"form-control\" placeholder=\"Type your email\" \r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.password}\r\n                        onChange={handleChange('password')} \r\n                        type=\"password\" className=\"form-control\" placeholder=\"Type your password\" \r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-outline-warning\" > {state.buttonText} </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const registrationMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            \r\n            <div className=\"col-md-6 offset-md-3\">\r\n                {registrationHead()}\r\n                {registrationMessage()}\r\n                {registrationForm()}\r\n                <hr/>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Registration"]},"metadata":{},"sourceType":"module"}