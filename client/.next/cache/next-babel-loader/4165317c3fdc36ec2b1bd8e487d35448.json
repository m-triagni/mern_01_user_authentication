{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Agni\\\\Udemy\\\\MERNStack_AWS\\\\SourceCode\\\\front-end\\\\pages\\\\registration.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport { showSuccessMessage, showErrorMessage } from '../utils/alert';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { API } from '../config';\n\nvar Registration = function Registration() {\n  var _useState = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: '',\n    success: '',\n    buttonText: 'Submit'\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText;\n\n  var registrationHead = function registrationHead() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"Register\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var handleChange = function handleChange(attributeName) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, attributeName, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Submit'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setState(_objectSpread({}, state, {\n              buttonText: 'Registering...'\n            }));\n            _context.prev = 2;\n            //console.table({name, email, password})\n            console.log('url', \"\".concat(API, \"/register\"));\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(API, \"/register\"), {\n              name: name,\n              email: email,\n              password: password\n            }));\n\n          case 6:\n            response = _context.sent;\n            console.log('response: ', response); //if success , empty all field\n\n            setState(_objectSpread({}, state, {\n              name: '',\n              email: '',\n              password: '',\n              buttonText: 'Submitted',\n              success: response.data.message,\n              error: response.data.error\n            }));\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('error: ', _context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: 'Register',\n              error: _context.t0.response.data.error\n            }));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 11]], _Promise);\n  };\n  /*\r\n  const handleSubmit =  e => {\r\n      e.preventDefault(); \r\n        setState({...state, buttonText: 'Registering...' })\r\n      \r\n      //console.table({name, email, password})\r\n      axios.post(`http://localhost:8009/api/register`,{\r\n          name, email, password\r\n      })\r\n      .then(res => {\r\n             //if success , empty all field\r\n          setState({...state,\r\n              name:'',\r\n              email:'',\r\n              password:'',\r\n              buttonText: 'Submitted',\r\n              success: res.data.message\r\n          });\r\n       })\r\n      .catch(err => {\r\n          console.log('error: ' , err);\r\n          setState({...state,\r\n              buttonText: 'Register',\r\n              error: err.response.data.message\r\n          });\r\n       })\r\n  } \r\n  */\n\n\n  var registrationForm = function registrationForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \" \", state.buttonText, \" \")));\n  };\n\n  var registrationMessage = function registrationMessage() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, success && showSuccessMessage(success), error && showErrorMessage(error));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, registrationHead(), registrationMessage(), registrationForm(), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }), _JSON$stringify(state)));\n};\n\nexport default Registration;","map":{"version":3,"sources":["C:/Agni/Udemy/MERNStack_AWS/SourceCode/front-end/pages/registration.js"],"names":["Layout","showSuccessMessage","showErrorMessage","useState","axios","API","Registration","name","email","password","error","success","buttonText","state","setState","registrationHead","handleChange","attributeName","e","target","value","handleSubmit","preventDefault","console","log","post","response","data","message","registrationForm","registrationMessage"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,QAAmD,gBAAnD;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAO;AACxB,kBAA0BH,QAAQ,CAAC;AAC/BI,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,QAAQ,EAAE,EAHqB;AAI/BC,IAAAA,KAAK,EAAC,EAJyB;AAK/BC,IAAAA,OAAO,EAAC,EALuB;AAM/BC,IAAAA,UAAU,EAAC;AANoB,GAAD,CAAlC;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AASA,MAAOP,IAAP,GAA6DM,KAA7D,CAAON,IAAP;AAAA,MAAaC,KAAb,GAA6DK,KAA7D,CAAaL,KAAb;AAAA,MAAoBC,QAApB,GAA6DI,KAA7D,CAAoBJ,QAApB;AAAA,MAA+BC,KAA/B,GAA6DG,KAA7D,CAA+BH,KAA/B;AAAA,MAAsCC,OAAtC,GAA6DE,KAA7D,CAAsCF,OAAtC;AAAA,MAA+CC,UAA/C,GAA6DC,KAA7D,CAA+CD,UAA/C;;AAEA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPD;;AASA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD;AAAA,WAAmB,UAACC,CAAD,EAAO;AAAA;;AAC3CJ,MAAAA,QAAQ,mBAAKD,KAAL,wDAAaI,aAAb,EAA6BC,CAAC,CAACC,MAAF,CAASC,KAAtC,4CAAmD,EAAnD,8CAA+D,EAA/D,iDAA8E,QAA9E,oBAAR;AACH,KAFoB;AAAA,GAArB;;AAIA,MAAMC,YAAY,GAAI,SAAhBA,YAAgB,CAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBA,YAAAA,CAAC,CAACI,cAAF;AAEAR,YAAAA,QAAQ,mBAAKD,KAAL;AAAYD,cAAAA,UAAU,EAAE;AAAxB,eAAR;AAHkB;AAMd;AACAW,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,YAAsBnB,GAAtB;AAPc;AAAA,6CAQSD,KAAK,CAACqB,IAAN,WAAcpB,GAAd,gBAA6B;AAChDE,cAAAA,IAAI,EAAJA,IADgD;AAC1CC,cAAAA,KAAK,EAALA,KAD0C;AACnCC,cAAAA,QAAQ,EAARA;AADmC,aAA7B,CART;;AAAA;AAQRiB,YAAAA,QARQ;AAYdH,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA2BE,QAA3B,EAZc,CAcb;;AACAZ,YAAAA,QAAQ,mBAAKD,KAAL;AACLN,cAAAA,IAAI,EAAC,EADA;AAELC,cAAAA,KAAK,EAAC,EAFD;AAGLC,cAAAA,QAAQ,EAAC,EAHJ;AAILG,cAAAA,UAAU,EAAE,WAJP;AAKLD,cAAAA,OAAO,EAAEe,QAAQ,CAACC,IAAT,CAAcC,OALlB;AAMLlB,cAAAA,KAAK,EAAEgB,QAAQ,CAACC,IAAT,CAAcjB;AANhB,eAAR;AAfa;AAAA;;AAAA;AAAA;AAAA;AAyBda,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAV,YAAAA,QAAQ,mBAAKD,KAAL;AACJD,cAAAA,UAAU,EAAE,UADR;AAEJF,cAAAA,KAAK,EAAE,YAAMgB,QAAN,CAAeC,IAAf,CAAoBjB;AAFvB,eAAR;;AA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;AAiCA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAII,MAAMmB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,WACI;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAEd,IADX;AAEI,MAAA,QAAQ,EAAES,YAAY,CAAC,MAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,MAHT;AAGgB,MAAA,SAAS,EAAC,cAH1B;AAGyC,MAAA,WAAW,EAAC,gBAHrD;AAII,MAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAEH,KAAK,CAACL,KADjB;AAEI,MAAA,QAAQ,EAAEQ,YAAY,CAAC,OAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,OAHT;AAGiB,MAAA,SAAS,EAAC,cAH3B;AAG0C,MAAA,WAAW,EAAC,iBAHtD;AAII,MAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,EAiBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAEH,KAAK,CAACJ,QADjB;AAEI,MAAA,QAAQ,EAAEO,YAAY,CAAC,UAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,UAHT;AAGoB,MAAA,SAAS,EAAC,cAH9B;AAG6C,MAAA,WAAW,EAAC,oBAHzD;AAII,MAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjBJ,EAyBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA+CH,KAAK,CAACD,UAArD,MADJ,CAzBJ,CADJ;AA+BH,GAhCD;;AAkCA,MAAMkB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnB,OAAO,IAAIV,kBAAkB,CAACU,OAAD,CADlC,EAEKD,KAAK,IAAIR,gBAAgB,CAACQ,KAAD,CAF9B,CADJ;AAMH,GAPD;;AASA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,gBAAgB,EADrB,EAEKe,mBAAmB,EAFxB,EAGKD,gBAAgB,EAHrB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKK,gBAAehB,KAAf,CALL,CAFJ,CADJ;AAYH,CAhJD;;AAiJA,eAAeP,YAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport {showSuccessMessage, showErrorMessage} from '../utils/alert';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {API} from '../config';\r\n\r\n\r\nconst Registration = () =>  {\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error:'',\r\n        success:'',\r\n        buttonText:'Submit'\r\n    })\r\n\r\n    const {name, email, password , error, success, buttonText} = state\r\n  \r\n    const registrationHead = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Register</h1>\r\n                <br />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const handleChange = (attributeName) => (e) => {\r\n        setState({...state, [attributeName]: e.target.value, error:'', success:'', buttonText:'Submit'})\r\n    }\r\n\r\n    const handleSubmit =  async e => {\r\n        e.preventDefault();\r\n\r\n        setState({...state, buttonText: 'Registering...' })\r\n        try {\r\n\r\n            //console.table({name, email, password})\r\n            console.log('url', `${API}/register`)\r\n            const response = await axios.post(`${API}/register`,{\r\n                name, email, password\r\n            })\r\n\r\n            console.log('response: ' , response);\r\n \r\n             //if success , empty all field\r\n             setState({...state,\r\n                name:'',\r\n                email:'',\r\n                password:'',\r\n                buttonText: 'Submitted',\r\n                success: response.data.message,\r\n                error: response.data.error,\r\n            });\r\n\r\n        }catch(error) {\r\n            console.log('error: ' , error);\r\n            setState({...state,\r\n                buttonText: 'Register',\r\n                error: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n    const handleSubmit =  e => {\r\n        e.preventDefault(); \r\n\r\n        setState({...state, buttonText: 'Registering...' })\r\n        \r\n        //console.table({name, email, password})\r\n        axios.post(`http://localhost:8009/api/register`,{\r\n            name, email, password\r\n        })\r\n        .then(res => {\r\n \r\n            //if success , empty all field\r\n            setState({...state,\r\n                name:'',\r\n                email:'',\r\n                password:'',\r\n                buttonText: 'Submitted',\r\n                success: res.data.message\r\n            });\r\n         })\r\n        .catch(err => {\r\n            console.log('error: ' , err);\r\n            setState({...state,\r\n                buttonText: 'Register',\r\n                error: err.response.data.message\r\n            });\r\n         })\r\n    } \r\n*/\r\n\r\n    const registrationForm = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={name}\r\n                        onChange={handleChange('name')} \r\n                        type=\"text\" className=\"form-control\" placeholder=\"Type your name\"\r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.email}\r\n                        onChange={handleChange('email')} \r\n                        type=\"email\" className=\"form-control\" placeholder=\"Type your email\" \r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.password}\r\n                        onChange={handleChange('password')} \r\n                        type=\"password\" className=\"form-control\" placeholder=\"Type your password\" \r\n                        required\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-outline-warning\" > {state.buttonText} </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const registrationMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            \r\n            <div className=\"col-md-6 offset-md-3\">\r\n                {registrationHead()}\r\n                {registrationMessage()}\r\n                {registrationForm()}\r\n                <hr/>\r\n                {JSON.stringify(state)}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Registration"]},"metadata":{},"sourceType":"module"}