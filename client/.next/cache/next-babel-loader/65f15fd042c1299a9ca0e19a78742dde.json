{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Agni\\\\Udemy\\\\MERNStack_AWS\\\\SourceCode\\\\frontend\\\\pages\\\\auth\\\\password-forget\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport Layout from '../../../components/Layout';\nimport { showSuccessMessage, showErrorMessage } from '../../../utils/alert';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API } from '../../../config';\nimport { authenticate, isAuth } from '../../../utils/auth';\nimport { listAPI } from '../../../listAPI';\nimport { listPage } from '../../../listPage';\nimport { listEnum } from '../../../listEnum';\n\nconst ForgetPassword = () => {\n  //list of button state\n  const buttonState = ['Reset Password', 'Submit..'];\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    email: '',\n    error: '',\n    success: '',\n    buttonText: buttonState[0]\n  });\n  const {\n    email,\n    error,\n    success,\n    buttonText\n  } = state;\n\n  const handleChange = attributeName => e => {\n    setState(_objectSpread({}, state, {\n      [attributeName]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: buttonState[0]\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread({}, state, {\n      buttonText: buttonState[1]\n    }));\n\n    try {\n      //console.table({name, email, password})\n      const response = await axios.put(`${API}${listAPI.API_ForgetPassword}`, {\n        email\n      });\n      Router.push(listPage.Page_PasswordForgetDone);\n    } catch (error) {\n      console.log('error: ', error);\n      setState(_objectSpread({}, state, {\n        buttonText: buttonState[0],\n        error: error.response.data.error\n      }));\n    }\n  }; //set head\n\n\n  const passwordForgetHead = () => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Forget Password\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }; //set form\n\n\n  const passwordForgetForm = () => {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \" \", state.buttonText, \" \")));\n  }; //set message\n\n\n  const passwordForgetMessage = () => {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, success && showSuccessMessage(success), error && showErrorMessage(error));\n  }; //return page layout\n\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, passwordForgetHead(), passwordForgetMessage(), passwordForgetForm(), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ForgetPassword;","map":{"version":3,"sources":["C:/Agni/Udemy/MERNStack_AWS/SourceCode/frontend/pages/auth/password-forget/index.js"],"names":["Router","Layout","showSuccessMessage","showErrorMessage","useEffect","useState","axios","API","authenticate","isAuth","listAPI","listPage","listEnum","ForgetPassword","buttonState","state","setState","email","error","success","buttonText","handleChange","attributeName","e","target","value","handleSubmit","preventDefault","response","put","API_ForgetPassword","push","Page_PasswordForgetDone","console","log","data","passwordForgetHead","passwordForgetForm","passwordForgetMessage"],"mappings":"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","sourcesContent":["import Router from 'next/router'\r\n\r\nimport Layout from '../../../components/Layout';\r\nimport {showSuccessMessage, showErrorMessage} from '../../../utils/alert';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {API} from '../../../config';\r\nimport {authenticate, isAuth} from '../../../utils/auth';\r\n\r\nimport { listAPI } from '../../../listAPI';\r\nimport { listPage } from '../../../listPage';\r\nimport { listEnum } from '../../../listEnum';\r\n\r\nconst ForgetPassword = () => {\r\n    \r\n    //list of button state\r\n    const buttonState = ['Reset Password', 'Submit..'];\r\n\r\n    const [state, setState] = useState({\r\n        email: '', \r\n\r\n        error:'',\r\n        success:'',\r\n        buttonText: buttonState[0],   \r\n     })\r\n\r\n     const { email,  error, success, buttonText} = state\r\n\r\n \r\n    const handleChange = (attributeName) => (e) => {\r\n        setState({...state, [attributeName]: e.target.value, error:'', success:'', buttonText: buttonState[0]})\r\n    }\r\n\r\n    const handleSubmit =  async e => {\r\n        e.preventDefault();\r\n\r\n        setState({...state, buttonText: buttonState[1] })\r\n        try {\r\n\r\n            //console.table({name, email, password})\r\n            const response = await axios.put(`${API}${listAPI.API_ForgetPassword}`,{\r\n                email\r\n            })\r\n \r\n            Router.push(listPage.Page_PasswordForgetDone) ;\r\n\r\n  \r\n        }catch(error) {\r\n            console.log('error: ' , error);\r\n            setState({...state,\r\n                buttonText:  buttonState[0],\r\n                error: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    //set head\r\n    const passwordForgetHead = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Forget Password</h1>\r\n                <br />\r\n            </React.Fragment>\r\n        ) \r\n    }\r\n\r\n    //set form\r\n    const passwordForgetForm = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                 \r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.email}\r\n                        onChange={handleChange('email')} \r\n                        type=\"email\" className=\"form-control\" placeholder=\"Type your email\" \r\n                        required\r\n                        />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-outline-warning\" > {state.buttonText} </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    //set message\r\n    const passwordForgetMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    //return page layout\r\n    return (\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                {passwordForgetHead()}\r\n                {passwordForgetMessage()}\r\n                {passwordForgetForm()}\r\n                <hr/>\r\n             </div> \r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ForgetPassword"]},"metadata":{},"sourceType":"module"}