{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Agni\\\\Udemy\\\\MERNStack_AWS\\\\SourceCode\\\\frontend\\\\pages\\\\auth\\\\password-forget\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport Layout from '../../../components/Layout';\nimport { showSuccessMessage, showErrorMessage } from '../../../utils/alert';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API } from '../../../config';\nimport { authenticate, isAuth } from '../../../utils/auth';\nimport { listAPI } from '../../../listAPI';\nimport { listPage } from '../../../listPage';\nimport { listEnum } from '../../../listEnum';\n\nvar ForgetPassword = function ForgetPassword() {\n  //list of button state\n  var buttonState = ['Reset Password', 'Submit..'];\n\n  var _useState = useState({\n    email: '',\n    error: '',\n    success: '',\n    buttonText: buttonState[0]\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleChange = function handleChange(attributeName) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread({}, state, (_objectSpread2 = {}, _defineProperty(_objectSpread2, attributeName, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", buttonState[0]), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setState(_objectSpread({}, state, {\n              buttonText: buttonState[1]\n            }));\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"\".concat(API).concat(listAPI.API_ResetPassword), {\n              email: email,\n              password: password\n            }));\n\n          case 5:\n            response = _context.sent;\n            //authenticate\n            authenticate(response, function () {\n              return isAuth() && isAuth().role === listEnum.user.role.admin ? Router.push(listPage.Page_Admin) : Router.push(listPage.Page_User); // redirect to home\n            });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('error: ', _context.t0);\n            setState(_objectSpread({}, state, {\n              buttonText: buttonState[0],\n              error: _context.t0.response.data.error\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], _Promise);\n  }; //set head\n\n\n  var passwordForgetHead = function passwordForgetHead() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Forget Password\"), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }));\n  }; //set form\n\n\n  var passwordForgetForm = function passwordForgetForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      value: state.email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \" \", state.buttonText, \" \")));\n  }; //set message\n\n\n  var passwordForgetMessage = function passwordForgetMessage() {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, success && showSuccessMessage(success), error && showErrorMessage(error));\n  }; //return page layout\n\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, passwordForgetHead(), passwordForgetMessage(), passwordForgetForm(), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["C:/Agni/Udemy/MERNStack_AWS/SourceCode/frontend/pages/auth/password-forget/index.js"],"names":["Router","Layout","showSuccessMessage","showErrorMessage","useEffect","useState","axios","API","authenticate","isAuth","listAPI","listPage","listEnum","ForgetPassword","buttonState","email","error","success","buttonText","state","setState","handleChange","attributeName","e","target","value","handleSubmit","preventDefault","post","API_ResetPassword","password","response","role","user","admin","push","Page_Admin","Page_User","console","log","data","passwordForgetHead","passwordForgetForm","passwordForgetMessage"],"mappings":"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","sourcesContent":["import Router from 'next/router'\r\n\r\nimport Layout from '../../../components/Layout';\r\nimport {showSuccessMessage, showErrorMessage} from '../../../utils/alert';\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {API} from '../../../config';\r\nimport {authenticate, isAuth} from '../../../utils/auth';\r\n\r\nimport { listAPI } from '../../../listAPI';\r\nimport { listPage } from '../../../listPage';\r\nimport { listEnum } from '../../../listEnum';\r\n\r\nconst ForgetPassword = () => {\r\n    \r\n    //list of button state\r\n    const buttonState = ['Reset Password', 'Submit..'];\r\n\r\n    const [state, setState] = useState({\r\n        email: '', \r\n\r\n        error:'',\r\n        success:'',\r\n        buttonText: buttonState[0],   \r\n     })\r\n \r\n    const handleChange = (attributeName) => (e) => {\r\n        setState({...state, [attributeName]: e.target.value, error:'', success:'', buttonText: buttonState[0]})\r\n    }\r\n\r\n    const handleSubmit =  async e => {\r\n        e.preventDefault();\r\n\r\n        setState({...state, buttonText: buttonState[1] })\r\n        try {\r\n\r\n            //console.table({name, email, password})\r\n            const response = await axios.post(`${API}${listAPI.API_ResetPassword}`,{\r\n                email, password\r\n            })\r\n\r\n            //authenticate\r\n            authenticate(response, () => {\r\n                 return isAuth() && isAuth().role === listEnum.user.role.admin \r\n                    ? Router.push(listPage.Page_Admin) \r\n                    : Router.push(listPage.Page_User) ; // redirect to home\r\n            })\r\n  \r\n        }catch(error) {\r\n            console.log('error: ' , error);\r\n            setState({...state,\r\n                buttonText:  buttonState[0],\r\n                error: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    //set head\r\n    const passwordForgetHead = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Forget Password</h1>\r\n                <br />\r\n            </React.Fragment>\r\n        ) \r\n    }\r\n\r\n    //set form\r\n    const passwordForgetForm = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                 \r\n                <div className=\"form-group\">\r\n                    <input \r\n                        value={state.email}\r\n                        onChange={handleChange('email')} \r\n                        type=\"email\" className=\"form-control\" placeholder=\"Type your email\" \r\n                        required\r\n                        />\r\n                </div>\r\n                \r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-outline-warning\" > {state.buttonText} </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    //set message\r\n    const passwordForgetMessage = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {success && showSuccessMessage(success)}\r\n                {error && showErrorMessage(error)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    //return page layout\r\n    return (\r\n        <Layout>\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                {passwordForgetHead()}\r\n                {passwordForgetMessage()}\r\n                {passwordForgetForm()}\r\n                <hr/>\r\n             </div> \r\n        </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}