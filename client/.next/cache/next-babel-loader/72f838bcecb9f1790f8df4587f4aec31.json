{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport cookie from 'js-cookie';\nconst keyToken = 'token';\nconst keyUser = 'user'; //set in cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1 // cookie will be expired in 1 day\n\n    });\n  }\n}; //remove from cookie\n\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key);\n  }\n}; //get data from cookie, such as: token. It will be useful when we need to make request to server with auth token\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; //set in localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n}; //remove from localstorage\n\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; //authenticate \n\nexport const authenticate = (response, next) => {\n  setCookie(keyToken, response.data.token);\n  setLocalStorage(keyUser, response.data.user);\n  next();\n}; //access user info from local storage\n\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie(keyToken);\n\n    if (cookieChecked) {\n      if (localStorage.getItem(keyUser)) {\n        return JSON.parse(localStorage.getItem(keyUser));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const logout = () => {};","map":{"version":3,"sources":["C:/Agni/Udemy/MERNStack_AWS/SourceCode/frontend/utils/auth.js"],"names":["cookie","keyToken","keyUser","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStorage","removeItem","authenticate","response","next","data","token","user","isAuth","cookieChecked","getItem","JSON","parse","logout"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,MAAMC,QAAQ,GAAG,OAAjB;AACA,MAAMC,OAAO,GAAG,MAAhB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAKC,KAAL,KAAe;AACpC,aAAoB;AAChBL,IAAAA,MAAM,CAACM,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE,CADU,CACR;;AADQ,KAAvB;AAGH;AACJ,CANM,C,CAQP;;AACA,OAAO,MAAMC,YAAY,GAAIJ,GAAD,IAAS;AACjC,aAAoB;AAChBJ,IAAAA,MAAM,CAACS,MAAP,CAAcL,GAAd;AACH;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMM,SAAS,GAAIN,GAAD,IAAS;AAC9B,aAAoB;AAChB,WAAOJ,MAAM,CAACW,GAAP,CAAWP,GAAX,CAAP;AACH;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMQ,eAAe,GAAG,CAACR,GAAD,EAAMC,KAAN,KAAgB;AAC3C,aAAoB;AAChBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBV,GAArB,EAA0B,gBAAeC,KAAf,CAA1B;AACH;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMU,kBAAkB,GAAIX,GAAD,IAAS;AACvC,aAAoB;AAChBS,IAAAA,YAAY,CAACG,UAAb,CAAwBZ,GAAxB;AACH;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMa,YAAY,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC5ChB,EAAAA,SAAS,CAACF,QAAD,EAAWiB,QAAQ,CAACE,IAAT,CAAcC,KAAzB,CAAT;AACAT,EAAAA,eAAe,CAACV,OAAD,EAAUgB,QAAQ,CAACE,IAAT,CAAcE,IAAxB,CAAf;AACAH,EAAAA,IAAI;AACP,CAJM,C,CAMP;;AACA,OAAO,MAAMI,MAAM,GAAG,MAAM;AACxB,aAAoB;AAChB,UAAMC,aAAa,GAAGd,SAAS,CAACT,QAAD,CAA/B;;AACA,QAAIuB,aAAJ,EAAmB;AACf,UAAGX,YAAY,CAACY,OAAb,CAAqBvB,OAArB,CAAH,EAAkC;AAC9B,eAAOwB,IAAI,CAACC,KAAL,CAAWd,YAAY,CAACY,OAAb,CAAqBvB,OAArB,CAAX,CAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ;AACJ;AACJ,CAXM;AAaP,OAAO,MAAM0B,MAAM,GAAG,MAAM,CAE3B,CAFM","sourcesContent":["import cookie from 'js-cookie'\r\n\r\nconst keyToken = 'token';\r\nconst keyUser = 'user';\r\n\r\n//set in cookie\r\nexport const setCookie = (key,value) => {\r\n    if(process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1 // cookie will be expired in 1 day\r\n        })\r\n    }\r\n}\r\n\r\n//remove from cookie\r\nexport const removeCookie = (key) => {\r\n    if(process.browser) {\r\n        cookie.remove(key)\r\n    }\r\n}\r\n\r\n//get data from cookie, such as: token. It will be useful when we need to make request to server with auth token\r\nexport const getCookie = (key) => {\r\n    if(process.browser) {\r\n        return cookie.get(key)\r\n    }\r\n}\r\n\r\n//set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if(process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n}\r\n\r\n//remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n    if(process.browser) {\r\n        localStorage.removeItem(key)\r\n    }\r\n}\r\n\r\n//authenticate \r\nexport const authenticate = (response, next) => {\r\n    setCookie(keyToken, response.data.token);\r\n    setLocalStorage(keyUser, response.data.user);\r\n    next();\r\n}\r\n\r\n//access user info from local storage\r\nexport const isAuth = () => {\r\n    if(process.browser) {\r\n        const cookieChecked = getCookie(keyToken)\r\n        if (cookieChecked) {\r\n            if(localStorage.getItem(keyUser)) {\r\n                return JSON.parse(localStorage.getItem(keyUser));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}